spring.application.name=bookstore
server.port=8080
server.shutdown=graceful
spring.mvc.problemdetails.enabled=true
######## BookStore Application Configuration  #########
app.new-orders-topic=new-orders-topic
app.delivered-orders-topic=delivered-orders-topic
app.cancelled-orders-topic=cancelled-orders-topic
app.error-orders-topic=error-orders-topic
app.new-orders-job-cron=*/10 * * * * *
app.rejected-orders-job-cron=*/10 * * * * *
######## Actuator Configuration  #########
management.endpoints.web.exposure.include=*

######## Database Configuration  #########
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres

#spring.flyway.clean-disabled=false
#spring.flyway.clean-on-validation-error=true

######## Redis Configuration  #########
spring.data.redis.host=localhost
spring.data.redis.port=6379

######## Kafka Configuration  #########
KAFKA_BROKER=localhost:9092
spring.kafka.bootstrap-servers=${KAFKA_BROKER}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.group-id=bookstore
#spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
